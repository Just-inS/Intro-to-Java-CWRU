Java Reference/Compound Types

What we have learned so far:
Everything stored in a computers is just a number in binary. All data in a programming language have a type associated with it: the type is what the programmer declares that the data represents.
Java is strictly typed: all expressions that produce values have types, and Java verifies that each type is used correctly.

There are two kinds of types in Java:
1) primitive types (int, double, char, boolean, etc) - these are all pre-defined
2) compound types (called reference types in your book) - these are both pre-defined and created by the programmer

The basic compound type is called a "class".  A class consists of:
	1) variables of any type (Java calls variables inside of classes "fields")
	2) functions that take 0 or more input, possibly performs some action, and returns 0 or 1 value (Java calls these functions "methods")
	3) other reference/compound types (nested types)
	
There are a couple other kinds of reference/compound types that will be covered later.

Example:  Suppose we want Movie to be a type. Movie will contain fields to stored things like: the title, the actors, length in minutes, image data, what part of the film we are currently showing, etc.
	Movie will contain methods to do things like: get the title, choose a scene, etc.
	
Important: beginning programmers often struggle with the difference between a type and an instance of the type.

	For example, if the type is Movie, instances of the type are "Get Out", "Star Wars: The Last Jedi", "The Devil Wears Prada"
	Each instance refers to a specific, separate movie while the type Movie refers to the entire concept of what a film is.
	
Ex:	  type       |   instance of the type
	  -----------+------------------------
	  int        |   -3, 5, 100
	  JFrame     |   all the windows on your desktop
	  Movie      |   "Pulp Fiction", "Black Panther"
  
A class instance is called an "object" in Java.

We will now give examples of 2 pre-defined classes:

	Math:    a collection of mathematical functions and constants
	JFrame:  represents a window on your computer screen

JFrame and Math are different kinds of classes.  JFrame is a "normal" class in that you can create instances of it.
Math on the other hand, is more limited in that you can't create an instance.  (Formally, the Math class has a private constructor.  You will see what that means soon.)

What can we do with classes?  Below I show you how to:
	1) Create an instance of the class
	2) Execute a method of a class
	3) Access a field of a class
	
Using Classes:
1) To create an instance of a class, use the new operator: 	new desired-type(0 or more input values)
								new JFrame()    -> this results in a value of type JFrame -> note that to use JFrame, you must "import" the package.  
								See the note on Java packages below.

The new operator does the following:

	1. Allocate space in memory for the type instance.
	2. Initializes the instance using the input data (it does this by calling a special method/function, called a constructor, whose sole purpose is initializing instances)
	3. Returns the location in memory of the instance.  This location is called the "reference" of the instance.
	
So, when we have new JFrame() Java first allocates enough space in memory for the JFrame instance, calls the constructor method with no input, and then returns the location of the instance.

VERY IMPORTANT POINT:  	For primitive types, the value of the type is the binary representation of the value.
			For reference types, the value of the type is the location of the instance in memory.
			
Note that every time we call new JFrame() we are creating a brand new instance of a JFrame. If we want to reuse the same instance, we need to remember it.  What is the only way to remember anything in Java? With a variable!

--------------------------
Side note: Java Packages
All Java pre-defined compound/reference types are organized into packages.

JFrame is in the package javax.swing
Math is in the package java.lang

You should "import" a reference type before you can use it.
import javax.swing.JFrame;
new JFrame()

You can import all the reference types in a package:
import javax.swing.*;

You do not have to import the type.  If you don't, you need to use the full name:
new javax.swing.JFrame()

Exception:  All types in the package java.lang are automatically imported. As a result, you do not need to import Math to use it.
--------------------------

Now that we can create an instance of a class, let's store the value into a variable.

Variables and Assignment with Reference Types:
The rules are EXACTLY the same as for primitive types
    	double x       		<- creates a variable called x that stores values of type double
	JFrame window  		<- creates a variable called window that stores values of type JFrame
     	x = 5.0        		<- stores the value 5.0 in variable x.
     	window = new JFrame()   <- stores the location of the JFrame instance in variable window.


